//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AE_DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AngularEntityEntities : DbContext
    {
        public AngularEntityEntities()
            : base("name=AngularEntityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AE_Languages> AE_Languages { get; set; }
    
        public virtual ObjectResult<AE_Languages> AE_Language_ReadLanguageID(string languageName, string languageDescr)
        {
            var languageNameParameter = languageName != null ?
                new ObjectParameter("LanguageName", languageName) :
                new ObjectParameter("LanguageName", typeof(string));
    
            var languageDescrParameter = languageDescr != null ?
                new ObjectParameter("LanguageDescr", languageDescr) :
                new ObjectParameter("LanguageDescr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AE_Languages>("AE_Language_ReadLanguageID", languageNameParameter, languageDescrParameter);
        }
    
        public virtual ObjectResult<AE_Languages> AE_Language_ReadLanguageID(string languageName, string languageDescr, MergeOption mergeOption)
        {
            var languageNameParameter = languageName != null ?
                new ObjectParameter("LanguageName", languageName) :
                new ObjectParameter("LanguageName", typeof(string));
    
            var languageDescrParameter = languageDescr != null ?
                new ObjectParameter("LanguageDescr", languageDescr) :
                new ObjectParameter("LanguageDescr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AE_Languages>("AE_Language_ReadLanguageID", mergeOption, languageNameParameter, languageDescrParameter);
        }
    }
}
